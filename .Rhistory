library()
# Activity 2
#Part I
students <- c(Abraham, Beatrice, Cory, Dinah, Eric, Felicia)
# Activity 2
#Part I
students <- c("Abraham", "Beatrice", "Cory", "Dinah", "Eric", "Felicia")
roll_call <- function(class) {
print(Sys.Date())
for (i in students) {
print(i)
}
}
roll_call(students)
#Part II
sample(33,3)
locker_combinations <- function(class) {
for (i in students) {
print(i) + sample(33,3)
}
}
locker_combinations(students)
sample(33,3)
locker_combinations(students)
locker_combinations <- function(class) {
for (i in students) {
print(i)
sample(33,3)
}
}
locker_combinations(students)
locker_combinations <- function(class) {
for (i in students) {
print(i, sample(33,3))
}
}
locker_combinations(students)
locker_combinations <- function(class) {
for (i in students) {
cat("Name:" , i , "Locker Number:" , sample(33,3))
}
}
locker_combinations(students)
ggplot(mtcars, aes(x=wt)) + geom_density()
library(tidyverse)
ggplot(mtcars, aes(x=wt)) + geom_density()
population_table <- read.csv('used_car_data.csv', check.names = F, stringsAsFactors = F)
setwd("~/Desktop/Bootcamp/R_Analysis/01_Demo")
population_table <- read.csv('used_car_data.csv', check.names = F, stringsAsFactors = F)
plt <- ggplot(population_table, aes(x=log10(Miles_Driven)))
plt+geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
t.test(log10(sample_table[Miles_Driven], mu=mean(log10(population_table[Miles_Driven]))))
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
sample_table2 <- population_table %>% sample_n(50)
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven))
mpg_data <- read.csv('mpg_modified.csv')
mpg_1999 <- mpg_data %>% filter(year==1999)
mpg_2008 <- mpg_data %>% filter(year==2008)
t.test(mpg_1999$hwy, mpg_2008$hwy, paired = T)
mtcars_filt <- mtcars[,c('hp', 'cyl')]
mtcars_filt$cyl <- factor(mtcars_filt$cyl)
aov(hp~cyl, data=mtcars_filt)
summary(aov(hp~cyl, data=mtcars_filt))
plt <- ggplot(mtcars,aes(x=hp,y=qsec))
plt + geom_point()
cor(mtcars$hp, mtcars$qsec)
head(used_cars)
used_cars <- read.csv('used_car_data.csv', stringsAsFactors = F)
head(used_cars)
plt <- ggplot(used_cars,aes(x=Miles_Driven, y=Selling_Price))
plt+geom_point()
cor(used_cars$Miles_Driven, used_cars$Selling_Price)
used_matrix <- as.matrix(used_cars[,c("Selling_Price", "Present_Price", "Miles_Driven")])
cor(used_matrix)
lm(qsec~hp,mtcars)
model <- lm(qsec~hp,mtcars)
yvals <- model$coefficients['hp']*mtcars$hp + model$coefficients['(Intercept)']
plot <- ggplot(mtcars,aes(x=hp,y=qsec))
plt+geom_points() + geom_line(aes(y=yvals), color = "red")
plt+geom_point() + geom_line(aes(y=yvals), color = "red")
plt+geom_point()
plt+geom_point() + geom_line(aes(y=yvals), color = 'red')
model <- lm(qsec~hp,mtcars)
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plot <- ggplot(mtcars,aes(x=hp,y=qsec))
plt+geom_point() + geom_line(aes(y=yvals), color = 'red')
lm(qsec~mpg + disp+ drat+ wt+ hp, data=mtcars)
summary(lm(qsec~mpg + disp+ drat+ wt+ hp, data=mtcars))
setwd("~/Desktop/Bootcamp/MechaCar_Statistical_Analysis")
library(dplyr)
mechacar <- read.csv('MechaCar_mpg.csv', check.names = T, stringsAsFactors = F)
head(mechacar)
# Multiple linear regression using all 6 variables
model <- lm(vehicle_length~vehicle_weight + spoiler_angle + ground_clearance + AWD + mpg, data=mechacar)
# Multiple linear regression using all 6 variables
lm(vehicle_length~vehicle_weight + spoiler_angle + ground_clearance + AWD + mpg, data=mechacar)
# Multiple linear regression using all 6 variables
lm(mpg~vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mechacar)
# Multiple linear regression using all 6 variables
lm(mpg~vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD + mpg, data=mechacar)
# Multiple linear regression using all 6 variables
lm(mpg~vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mechacar)
# Multiple linear regression using all 6 variables
summary(lm(mpg~vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mechacar)0
# Multiple linear regression using all 6 variables
summary(lm(mpg~vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mechacar))
# Deliverable 2
suspension_data <- read.csv('Suspension_Coil.csv', check.names = T, stringsAsFactors = F)
head(suspension_data)
summarize(suspension_data)
library(pastecs)
?summarize
suspension_data %>% summarize(mean=mean(PSI))
suspension_data %>% summarize(mean=mean(PSI) %>%  (median=median(PSI))
) %>%  (median=median(PSI))
suspension_data %>% summarize(mean=mean(PSI
suspension_data %>% summarize(mean=mean(PSI)
suspension_data %>% summarize(mean=mean(PSI))
suspension_data %>%
summarize(
mean=mean(PSI),
median=median(PSI),
variance=variance(PSI)
)
suspension_data %>%
summarize(
mean=mean(PSI),
median=median(PSI),
)
suspension_data %>%
summarize(
mean=mean(PSI),
median=median(PSI),
variance=var(PSI)
)
suspension_data %>%
summarize(
mean=mean(PSI),
median=median(PSI),
variance=var(PSI),
sd=sd(PSI)
)
head(suspension_data)
suspension_data %>%
group_by(Manufacturing_Lot) %>%
summarize(
mean=mean(PSI),
median=median(PSI),
variance=var(PSI),
sd=sd(PSI)
)
# Generate Summary Statistics
total_summary <- suspension_data %>%
summarize(
mean=mean(PSI),
median=median(PSI),
variance=var(PSI),
sd=sd(PSI)
)
total_summary
lot_summary
lot_summary <- suspension_data %>%
group_by(Manufacturing_Lot) %>%
summarize(
mean=mean(PSI),
median=median(PSI),
variance=var(PSI),
sd=sd(PSI)
)
lot_summary
# Deliverable 1
mechacar <- read.csv('MechaCar_mpg.csv', check.names = T, stringsAsFactors = F)
head(mechacar)
# Multiple linear regression using all 6 variables
summary(lm(mpg~vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mechacar))
# Is PSI of dataset different from population mean of 1,500?
t.test(suspension_data$PSI, mu=1500)
?t.test
t.test(suspension_data$PSI, subset(suspension_data, Manufacturing_Lot == 'Lot 1'))
head(suspension_data)
t.test(suspension_data$PSI, subset(suspension_data, Manufacturing_Lot == 'Lot1'))
t.test(suspension_data$PSI, mu=1500, subset(suspension_data, Manufacturing_Lot == 'Lot1'))
t.test(suspension_data$PSI, mu=1500)
t.test(suspension_data$PSI, mu=1500, subset(suspension_data$Manufacturing_Lot == "Lot1"))
t.test(suspension_data$PSI, mu=1500, subset(suspension_data, Manufacturing_Lot == "Lot1"))
t.test(suspension_data$PSI, mu=1500, subset= Manufacturing_Lot %in% c(Lot1))
t.test(suspension_data$PSI, mu=1500, subset= Manufacturing_Lot %in% c(Lot2))
t.test(suspension_data$PSI, mu=1500, subset= Manufacturing_Lot %in% c(Lot3))
t.test(suspension_data$PSI, mu=1500)
t.test(suspension_data$PSI, mu=1500, subset= Manufacturing_Lot %in% c(Lot4))
t.test(suspension_data$PSI, mu=1500, subset(Manufacturing_Lot == "Lot1"))
t.test(suspension_data$PSI, mu=1500, subset(suspension_dataset$Manufacturing_Lot == "Lot1"))
t.test(suspension_data$PSI, mu=1500, subset(suspension_data$Manufacturing_Lot == "Lot1"))
Lot1 <- subset(suspension_data, Manufacturing_Lot == "Lot1")
Lot1
t.test(Lot1$PSI, mu=1500)
Lot2 <- subset(suspension_data, Manufacturing_Lot == "Lot2")
Lot2
t.test(Lot2$PSI, mu=1500)
Lot3 <- subset(suspension_data, Manufacturing_Lot == "Lot3")
Lot3
t.test(Lot3$PSI, mu=1500)
head(mechacar)
